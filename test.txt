#include <chapter6.h>
#include <chapter5.h>
#define NKEYS   (sizeof (keytab)/sizeof(struct key))

/* count C keywords */
struct key keytab[] = 



int main( int argc, char *argv[])
{
    _int n;
    char word[MAXWORD];
    char *file = "test.txt";
    int
    char filePattern[] = ".txt";
    char sourceFilePattern[] = ".c";
    char headerFilePattern[] = ".h";
    
    FILE * filep;
    printf("NKEYS = %lld\n", NKEYS);
    while (--argc > 0 )
    {
        if ((strend(*argv, filePattern))       || 
            (strend(*argv, sourceFilePattern)) || 
            (strend(*argv, headerFilePattern))  )
        {    
            file = *argv;
        }    
    }

    filep = fopen(file, "r");

/* Comment */

/* */

int
int
   1 EOF
   1 FILE
   2 MAXWORD
   4 NKEYS
   2 argc
   5 argv
   1 sssbinsearch
   1 chapter5
   1 chapter6
   6 char
   3 count
   1 dapter6
   1 define
   1 fapter6
   1 fclose
   3 file
   2 filePattern
   4 filep
   1 fopen
   1 for
   1 sssgetword
   2 h
   2 headerFilePattern
   4 if
   2 sssinclude
   6 int
   1 sssisalpha
   2 key
   7 ssskeytab
   1 sssskudapter5
   1 sssmain
   9 sssn
   2 ssprintf
   1 ssreturn
   2 sssizeof
   2 sssourceFilePattern
   3 ssstrend
   2 ssstruct
   2 sswhile
   5 ssword

      1 EOF
   1 FILE
   2 MAXWORD
   4 NKEYS
   2 argc
   5 argv
   1 binsearch
   1 chapter5
   1 chapter6
   6 char
   3 count
   1 dapter6
   1 define
   1 fapter6
   1 fclose
   3 file
   2 filePattern
   4 filep
   1 fopen
   1 for
   1 getword
   2 h
   2 headerFilePattern
   4 if
   2 include
   6 int
   1 isalpha
   2 key
   7 keytab
   1 kudapter5
   1 main
   9 n
   2 aprintf
   1 areturn
   2 asizeof
   2 sourceFilePattern
   3 astrend
   2 astruct
   2 awswhile
   5 asssword
dapter6
fapter6 
kudapter5
    while (getword(word, MAXWORD, filep) != EOF)
    {
        // if(word[0] == '#')
        //     for(int i = 0; word[i] != '\0'; i++)
        //         word[i] = word[i+1];
        if (isalpha(word[0]))
        { 
            // for(int i = 0; word[i] != '\0';i++)
            //     printf("%c",word[i]);
            // printf("\n");    

            if ((n = binsearch(word, keytab, NKEYS)) >= 0)
                keytab[n].count++;
        }
    }

    for (n = 0; n < NKEYS; n++)
        if (keytab[n].count > 0)
            printf("%4d  %s\n",
                    keytab[n].count, keytab[n].word);
    
    fclose(filep);
    return 0;
}

